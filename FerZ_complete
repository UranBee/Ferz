
#include <iostream>

using namespace std;

const int N = 10;

int board[N][N];

void setQueen(int i, int j) {
    for (int x = 0; x < N; ++x) {
        ++board[x][j];
        ++board[i][x];
        int foo;
        foo = j - i + x;
        if (foo >= 0 && foo < N)
            ++board[x][foo];
        foo = j + i - x;
        if (foo >= 0 && foo < N)
            ++board[x][foo];
        board[i][j] = -1;
    }
}
void resetQueen(int i, int j) {
    for (int x = 0; x < N; ++x) {
        --board[x][j];
        --board[i][x];
        int foo;
        foo = j - i + x;
        if (foo >= 0 && foo < N)
            --board[x][foo];
        foo = j + i - x;
        if (foo >= 0 && foo < N)
            --board[x][foo];
        board[i][j] = 0;
    }
}

int tryplace(int i) {
    bool result = false;
    for (int j = 0; j < N; ++j) {
        if (board[i][j] == 0) {
            setQueen(i, j);
            if (i == N-1) { result = true; }
            else {
                if (!(result = tryplace(i + 1)))
                    resetQueen(i, j);
            }
        }
        if (result) {
            break;
        }
    }
    return result;
}



int main() {
    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < N; ++j) {
            board[i][j] = 0;
        }
    }
    tryplace(0);
    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < N; ++j) {
            if (board[i][j] == -1)
                cout << "[Q]";
            else if (board[i][j] == 1) {

            }
            else  {
                cout <<"[.]";
            }
        }
        cout << endl;
    }


    return 0;
}
